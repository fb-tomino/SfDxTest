version: 2
jobs:
  buildmaster:
    docker:
      - image: dancinllama/dockerdx

    # branches:
    #   only:
    #     - master

    environment:
      - SFDX_AUTOUPDATE_DISABLE: true

    steps:
      - checkout

      - run:
          name: Connect Sandbox
          command: sfdx force:auth:jwt:grant -i 3MVG9d8..z.hDcPLpmFuO54S6afwMRd7PN26g3hMfPUZiRYPEFyl4o00T4isazN5SrKuEqcC7JG1UveXd2eOS -f .deploy/server.key -u yoshinobu.tomino@gmail.com -s -a Sandbox

      - run:
          name: Change to metadataAPI
          command: sfdx force:source:convert -d src

      - run:
          name: Deploy Verify
          command: |
            sfdx force:mdapi:deploy -c -l RunAllTestsInOrg -d src -u Sandbox | tee out.log
            drs=`grep Status: out.log | tr -d ' ' | cut -d ':' -f 2`
            if [ ${drs} = "Failed" ]; then
              cat out.log
              exit 1
            fi

            jid=`grep jobid out.log | head -1 | tr -d ' ' | cut -d ':' -f 2`
            crs=

            while [ -z "${crs}" ]
            do
              sfdx force:mdapi:deploy -u Sandbox -i ${jid} -w 1 | tee out.log
              crs=`grep finished out.log`
            done
            crs=`grep Status: out.log | tail -1 | tr -d ' ' | cut -d ':' -f 2`
            if [ ${crs} = "Failed" ]; then
              cat out.log
              exit 1
            else
              echo 'Verify OK'
            fi

      - run:
          name: Deploy
          Command: |
            sfdx force:mdapi:deploy -d src -u Sandbox | tee out.log
            drs=`grep Status: out.log | tr -d ' ' | cut -d ':' -f 2`
            if [ ${drs} = "Failed" ]; then
              cat out.log
              exit 1
            fi

            jid=`grep jobid out.log | head -1 | tr -d ' ' | cut -d ':' -f 2`
            crs=

            while [ -z "${crs}" ]
            do
              sfdx force:mdapi:deploy -u Sandbox -i ${jid} -w 1 | tee out.log
              crs=`grep finished out.log`
            done
            crs=`grep Status: out.log | tail -1 | tr -d ' ' | cut -d ':' -f 2`
            if [ ${crs} = "Failed" ]; then
              cat out.log
              exit 1
            else
              echo 'Deploy OK'
            fi

  builddevelop:
    docker:
      - image: dancinllama/dockerdx

    # branches:
    #   only:
    #     - develop

    environment:
      - SFDX_AUTOUPDATE_DISABLE: true

    steps:
      - checkout

      - run:
          name: Test
          Command: echo hogehogehoge


workflows:
  version: 2
  build_master:
    jobs:
      - buildmaster
          filters:
            branches:
              only: master

  build_develop:
    jobs:
      - builddevelop
          filters:
            branches:
              only: develop
